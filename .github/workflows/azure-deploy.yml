name: Azure Deploy (API, Auth, Frontend)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  # Support both prefixed and non-prefixed secret names
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP || secrets.AZ_RESOURCE_GROUP }}
  ACR_NAME: ${{ secrets.ACR_NAME || secrets.AZ_ACR_NAME }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER || secrets.AZ_ACR_LOGIN_SERVER }}
  WEBAPP_API: ${{ secrets.WEBAPP_API || secrets.AZ_WEBAPP_API }}
  WEBAPP_AUTH: ${{ secrets.WEBAPP_AUTH || secrets.AZ_WEBAPP_AUTH }}
  WEBAPP_FRONTEND: ${{ secrets.WEBAPP_FRONTEND || secrets.AZ_WEBAPP_FRONTEND }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Login to Azure Container Registry
        run: |
          az acr login -n ${{ env.ACR_NAME }}
      
      # Build and push API image
      - name: Build and Push API Image
        run: |
          docker build \
            -f backend/Dockerfile \
            -t ${{ env.ACR_LOGIN_SERVER }}/hsapp-api:${{ github.sha }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/hsapp-api:latest \
            backend
          docker push ${{ env.ACR_LOGIN_SERVER }}/hsapp-api:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/hsapp-api:latest
      
      # Build and push Auth Server image
      - name: Build and Push Auth Image
        run: |
          docker build \
            -f backend/AuthServer.Dockerfile \
            -t ${{ env.ACR_LOGIN_SERVER }}/hsapp-auth:${{ github.sha }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/hsapp-auth:latest \
            backend
          docker push ${{ env.ACR_LOGIN_SERVER }}/hsapp-auth:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/hsapp-auth:latest
      
      # Build and push Frontend image
      - name: Build and Push Frontend Image
        run: |
          docker build \
            -f frontend/Dockerfile \
            -t ${{ env.ACR_LOGIN_SERVER }}/hsapp-frontend:${{ github.sha }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/hsapp-frontend:latest \
            frontend
          docker push ${{ env.ACR_LOGIN_SERVER }}/hsapp-frontend:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/hsapp-frontend:latest
      
      # Deploy API
      - name: Deploy API to Web App
        run: |
          az webapp config container set \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.WEBAPP_API }} \
            --docker-custom-image-name ${{ env.ACR_LOGIN_SERVER }}/hsapp-api:${{ github.sha }} \
            --docker-registry-server-url https://${{ env.ACR_LOGIN_SERVER }}
          
          # Set application settings
          az webapp config appsettings set \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.WEBAPP_API }} \
            --settings \
              WEBSITES_PORT=8080 \
              Database__Provider=${{ secrets.DATABASE_PROVIDER || 'Sqlite' }} \
              ConnectionStrings__Default="${{ secrets.PG_CONN_STR || 'Data Source=/data/app.db' }}" \
              App__CorsOrigins="${{ secrets.APP_CORS_ORIGINS || 'https://localhost:5173' }}" \
              App__SelfUrl="https://${{ env.WEBAPP_API }}.azurewebsites.net" \
              AuthServer__Authority="${{ secrets.AUTH_SELF_URL || format('https://{0}.azurewebsites.net', env.WEBAPP_AUTH) }}" \
              AuthServer__RequireHttpsMetadata=true
          
          # Restart to apply changes
          az webapp restart -g ${{ env.RESOURCE_GROUP }} -n ${{ env.WEBAPP_API }}
      
      # Deploy Auth Server
      - name: Deploy Auth Server to Web App
        run: |
          az webapp config container set \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.WEBAPP_AUTH }} \
            --docker-custom-image-name ${{ env.ACR_LOGIN_SERVER }}/hsapp-auth:${{ github.sha }} \
            --docker-registry-server-url https://${{ env.ACR_LOGIN_SERVER }}
          
          # Set application settings
          az webapp config appsettings set \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.WEBAPP_AUTH }} \
            --settings \
              WEBSITES_PORT=8081 \
              Database__Provider=${{ secrets.DATABASE_PROVIDER || 'Sqlite' }} \
              ConnectionStrings__Default="${{ secrets.PG_CONN_STR || 'Data Source=/data/app.db' }}" \
              App__CorsOrigins="${{ secrets.AUTH_CORS_ORIGINS || 'https://localhost:5173' }}" \
              App__SelfUrl="${{ secrets.AUTH_SELF_URL || format('https://{0}.azurewebsites.net', env.WEBAPP_AUTH) }}" \
              App__ClientUrl="${{ secrets.AUTH_CLIENT_URL || format('https://{0}.azurewebsites.net', env.WEBAPP_FRONTEND) }}" \
              App__RedirectAllowedUrls="${{ secrets.AUTH_CLIENT_URL || format('https://{0}.azurewebsites.net', env.WEBAPP_FRONTEND) }}"
          
          # Restart to apply changes
          az webapp restart -g ${{ env.RESOURCE_GROUP }} -n ${{ env.WEBAPP_AUTH }}
      
      # Deploy Frontend
      - name: Deploy Frontend to Web App
        run: |
          az webapp config container set \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.WEBAPP_FRONTEND }} \
            --docker-custom-image-name ${{ env.ACR_LOGIN_SERVER }}/hsapp-frontend:${{ github.sha }} \
            --docker-registry-server-url https://${{ env.ACR_LOGIN_SERVER }}
          
          # Set application settings
          az webapp config appsettings set \
            -g ${{ env.RESOURCE_GROUP }} \
            -n ${{ env.WEBAPP_FRONTEND }} \
            --settings \
              WEBSITES_PORT=8080 \
              VITE_API_BASE_URL="${{ secrets.AUTH_SELF_URL || format('https://{0}.azurewebsites.net', env.WEBAPP_AUTH) }}" \
              VITE_API_HOST_URL="${{ secrets.APP_SELF_URL || format('https://{0}.azurewebsites.net/api/v1', env.WEBAPP_API) }}" \
              VITE_ENVIRONMENT=production
          
          # Restart to apply changes
          az webapp restart -g ${{ env.RESOURCE_GROUP }} -n ${{ env.WEBAPP_FRONTEND }}
      
      - name: Deployment Summary
        run: |
          echo "üöÄ Deployment complete!"
          echo ""
          echo "üìç Application URLs:"
          echo "Frontend: https://${{ env.WEBAPP_FRONTEND }}.azurewebsites.net"
          echo "API: https://${{ env.WEBAPP_API }}.azurewebsites.net"
          echo "Auth Server: https://${{ env.WEBAPP_AUTH }}.azurewebsites.net"
          echo ""
          echo "üîç Check deployment status:"
          echo "az webapp browse -g ${{ env.RESOURCE_GROUP }} -n ${{ env.WEBAPP_FRONTEND }}"