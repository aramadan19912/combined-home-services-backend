name: Deploy Frontend to GitHub Pages

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-pages.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Determine environment
        id: env
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
            echo "name=environment::production" >> $GITHUB_OUTPUT
          else
            echo "name=environment::staging" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          VITE_API_BASE_URL: ${{ steps.env.outputs.environment == 'production' && vars.VITE_API_BASE_URL_PROD || vars.VITE_API_BASE_URL_STAGING }}
          VITE_API_HOST_URL: ${{ steps.env.outputs.environment == 'production' && vars.VITE_API_HOST_URL_PROD || vars.VITE_API_HOST_URL_STAGING }}
          VITE_PUBLIC_BASE_PATH: ${{ steps.env.outputs.environment == 'production' && vars.VITE_PUBLIC_BASE_PATH_PROD || vars.VITE_PUBLIC_BASE_PATH_STAGING }}
        run: |
          REPO_NAME=${{ github.event.repository.name }}
          BASE_PATH=${VITE_PUBLIC_BASE_PATH:-/${REPO_NAME}/}
          npm run build -- --base=${BASE_PATH}
          cp -f dist/index.html dist/404.html || true

      - name: Add CNAME for custom domain
        if: ${{ steps.env.outputs.environment == 'production' && vars.CUSTOM_DOMAIN_PROD != '' || steps.env.outputs.environment != 'production' && vars.CUSTOM_DOMAIN_STAGING != '' }}
        run: |
          if [ "${{ steps.env.outputs.environment }}" = "production" ]; then
            echo "${{ vars.CUSTOM_DOMAIN_PROD }}" > dist/CNAME
          else
            echo "${{ vars.CUSTOM_DOMAIN_STAGING }}" > dist/CNAME
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4